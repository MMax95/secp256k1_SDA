#ifndef UI_TYPE_H
#define UI_TYPE_H

enum UI_SM_input
{
    UI_SM_RX_NONE,
    UI_SM_RX_START,
    UI_SM_RX_ABORT,
    UI_SM_RX_SHUTDOWN,
    UI_SM_RX_CONNECTION_REQUEST_CONFIRMED,
    UI_SM_RX_BUFFER_REQUEST_CONFIRMED,
    UI_SM_RX_CONTINUE,

    UI_SM_RX_NETWORK_INIT_STATE   = 0b0001,
    UI_SM_RX_FILE_INIT_STATE      = 0b0010,
    UI_SM_RX_ITERATOR_INIT_STATE  = 0b0100,
    UI_SM_RX_MEMORY_INIT_STATE    = 0b1000
};

enum UI_SM_output
{
    UI_SM_TX_NONE,
    UI_SM_TX_START_CONFIRMED,
    UI_SM_TX_SHUTDOWN_CONFIRMED,
    UI_SM_TX_REQUEST_CONNECTION,
    UI_SM_TX_REQUEST_BUFFER,
    UI_SM_TX_CONTINUING,
    UI_SM_TX_FAULT,
  
    UI_SM_TX_USERMODE_CLIENT,
    UI_SM_TX_USERMODE_SERVER,
    UI_SM_TX_USERMODE_SATELLITE,
    UI_SM_TX_USERMODE_TESTING,
    UI_SM_TX_USERMODE_EXIT,

    UI_SM_TX_USERREQUEST_START,

    UI_SM_TX_INIT_MEMMANAGER,                 
    UI_SM_TX_INIT_MEMMANAGER_KNOWNPOINTS_OK,
    UI_SM_TX_INIT_MEMMANAGER_KNOWNPOINTS_NEW,
    UI_SM_TX_INIT_MEMMANAGER_POINTPOOL_OK,
    UI_SM_TX_INIT_MEMMANAGER_POINTPOOL_NEW,

    UI_SM_TX_INIT_FILEMANAGER,                
    UI_SM_TX_INIT_FILEMANAGER_KNOWNPOINTS_OK, 
    UI_SM_TX_INIT_FILEMANAGER_KNOWNPOINTS_NEW,
    UI_SM_TX_INIT_FILEMANAGER_CHECKPOINT_OK,  
    UI_SM_TX_INIT_FILEMANAGER_CHECKPOINT_NEW, 
    UI_SM_TX_INIT_FILEMANAGER_CONNECTION_OK,  
    UI_SM_TX_INIT_FILEMANAGER_CONNECTION_NEW, 
    UI_SM_TX_INIT_FILEMANAGER_DATABASE_OK,    
    UI_SM_TX_INIT_FILEMANAGER_DATABASE_NEW,   
    UI_SM_TX_INIT_FILEMANAGER_FAULT,

    UI_SM_TX_INIT_ITERATIONMANAGER,
    UI_SM_TX_INIT_ITERATIONMANAGER_COORDNO,
    UI_SM_TX_INIT_ITERATIONMANAGER_ITERATORNO,

    UI_SM_TX_INIT_NETWORKMANAGER_CLIENTNO,
    UI_SM_TX_INIT_NETWORKMANAGER_PORT,
    UI_SM_TX_INIT_NETWORKMANAGER_IP
};

enum UI_SM_state
{
    UI_SM_UNINITIALIZED,
    UI_SM_INITIALIZED,
    UI_SM_RUNNING,
    UI_SM_STOPPED,
    UI_SM_FAULT
};

struct UI_SM_struct
{
    // std::thread *stateMachineHandle;
    // Port uiManagerRxPort;
    // Port *parentPort;
    UI_SM_state SMstate;
    char user_input;
};

unsigned int TestUI(char &user_input, std::string &user_long_input);
#endif